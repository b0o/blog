---
import Site from '@layouts/Site.astro'
import BlogPostCard from '@components/BlogPostCard.astro'
import RssButton from '@components/RssButton.astro'
import { useTranslate, getLanguageFromUrl, localizeUrl } from '@utils/i18n'
import { format } from 'date-fns'
import _ from 'lodash'
import type { CollectionEntry } from 'astro:content'
import { getBlogPosts } from '@utils/posts'

export async function getStaticPaths() {
  const englishBlogPosts = await getBlogPosts('en')
  const portugueseBlogPosts = await getBlogPosts('pt')

  return [
    {
      params: { lang: undefined },
      props: { blogPosts: englishBlogPosts },
    },
    {
      params: { lang: 'pt' },
      props: { blogPosts: portugueseBlogPosts },
    },
  ]
}

const t = useTranslate(Astro)
const language = getLanguageFromUrl(Astro.url.pathname)

// eslint-disable-next-line @typescript-eslint/no-unused-vars
type Props = {
  blogPosts: CollectionEntry<'posts'>[]
}

const blogPosts = Astro.props.blogPosts

const blogPostsGroupedByYear = _.groupBy(blogPosts, (blogPost) => {
  return format(blogPost.data.date, 'yyyy')
})

const years = Object.keys(blogPostsGroupedByYear).sort(
  (yearA, yearB) => Number(yearB) - Number(yearA)
)

const rssUrl = localizeUrl('/posts/index.xml', language)
---

<Site
  title="Posts"
  description={t('PostsListDescription')}
  seo={{
    extend: {
      link: [
        {
          rel: 'alternate',
          type: 'application/rss+xml',
          href: rssUrl,
        },
      ],
    },
  }}
>
  <main class="grid grid-cols-layout">
    <div class="mb-4 hidden mx-auto gap-2 sm:flex sm:items-center">
      <h1 class="m-0">Posts</h1>

      <RssButton />
    </div>

    <div class="flex flex-row gap-16">
      <div>
        {
          years.map((year) => {
            const blogPosts = blogPostsGroupedByYear[year]
            return (
              <>
                <h2 id={year} class="mb-8 text-2xl sm:first:mt-8 sm:mt-16">
                  <time datetime={`${year}-01-01`}>{year}</time>
                </h2>

                <ul class="m-0 grid w-full max-w-2xl list-none grid-cols-1 gap-4">
                  {blogPosts
                    .sort((blogPostA, blogPostB) => {
                      return (
                        new Date(blogPostB.data.date).getTime() -
                        new Date(blogPostA.data.date).getTime()
                      )
                    })
                    .map((blogPost) => {
                      return (
                        <li class="h-full">
                          <BlogPostCard blogPost={blogPost} />
                        </li>
                      )
                    })}
                </ul>
              </>
            )
          })
        }
      </div>

      <div class="hidden lg:block pt-8 sticky min-h-0 self-start top-0">
        <h2>
          {t('ByYear')}
        </h2>

        <ul class="m-0 list-inside">
          {
            years.map((year) => {
              return (
                <li class="">
                  <a href={`#${year}`}>{year}</a>
                  <>({blogPostsGroupedByYear[year].length})</>
                </li>
              )
            })
          }
        </ul>
      </div>
    </div>
  </main>

  <div slot="mobile-nav-title" class="flex flex-row items-center gap-2">
    Posts

    <RssButton />
  </div>
</Site>
