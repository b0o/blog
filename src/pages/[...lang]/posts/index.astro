---
import Site from '@layouts/Site.astro'
import BlogPostCard from '@components/BlogPostCard.astro'
import RssButton from '@components/RssButton.astro'
import { useTranslate, getLanguageFromUrl, localizeUrl } from '@utils/i18n'
import { format } from 'date-fns'
import _ from 'lodash'
import type { CollectionEntry } from 'astro:content'
import { getBlogPosts } from '@utils/posts'
import { ChevronDown, ChevronUp } from 'lucide-react'
import IconButton from '@components/IconButton'

export async function getStaticPaths() {
  const englishBlogPosts = await getBlogPosts('en')
  const portugueseBlogPosts = await getBlogPosts('pt')

  return [
    {
      params: { lang: undefined },
      props: { blogPosts: englishBlogPosts },
    },
    {
      params: { lang: 'pt' },
      props: { blogPosts: portugueseBlogPosts },
    },
  ]
}

const t = useTranslate(Astro)
const language = getLanguageFromUrl(Astro.url.pathname)

type Props = {
  blogPosts: CollectionEntry<'posts'>[]
}

const blogPosts = Astro.props.blogPosts

const blogPostsGroupedByYear = _.groupBy(blogPosts, (blogPost) => {
  return format(blogPost.data.date, 'yyyy')
})

const years = Object.keys(blogPostsGroupedByYear).sort(
  (yearA, yearB) => Number(yearB) - Number(yearA)
)

const rssUrl = localizeUrl('/posts/index.xml', language)
---

<Site
  title="Posts"
  isTranslated
  description={t('PostsListDescription')}
  seo={{
    extend: {
      link: [
        {
          rel: 'alternate',
          type: 'application/rss+xml',
          href: rssUrl,
        },
      ],
    },
  }}
  htmlClass="scroll-smooth scroll-pt-[calc(var(--nav-height)_+_1rem)] sm:scroll-pt-4"
>
  <main class="grid grid-cols-layout my-8">
    <div class="mb-8 hidden mx-auto gap-2 sm:flex sm:items-center">
      <h1 class="m-0">Posts</h1>

      <RssButton />
    </div>

    <div class="col-full grid grid-cols-layout">
      {
        years.map((year, index) => {
          const blogPosts = blogPostsGroupedByYear[year]

          const prevYear: string | null = years[index - 1] ?? null
          const nextYear: string | null = years[index + 1] ?? null

          return (
            <div class="col-full mt-24 grid grid-cols-layout first:mt-0">
              <div id={year} />

              <div class="sticky top-[calc(var(--nav-height)_+_0.5rem)] col-full mb-8 w-full bg-background bg-opacity-75 px-horizontal-padding py-2 backdrop-blur-sm sm:top-0">
                <div class="mx-auto flex max-w-2xl flex-row justify-between">
                  <h2 class="m-0 text-2xl">
                    <time datetime={`${year}-01-01`}>{year}</time>
                  </h2>

                  <div class="flex flex-row gap-2">
                    <IconButton
                      href={`#${prevYear}`}
                      className="bg-transparent disabled:bg-transparent"
                      variant="rounded-full"
                      disabled={prevYear === null}
                      aria-label={t('PreviousYear')}
                    >
                      <ChevronUp />
                    </IconButton>

                    <IconButton
                      href={`#${nextYear}`}
                      className="bg-transparent disabled:bg-transparent"
                      variant="rounded-full"
                      disabled={nextYear === null}
                      aria-label={t('NextYear')}
                    >
                      <ChevronDown />
                    </IconButton>
                  </div>
                </div>
              </div>

              <ul class="m-0 mx-auto grid w-full max-w-2xl list-none grid-cols-1 gap-4">
                {blogPosts
                  .sort((blogPostA, blogPostB) => {
                    return (
                      new Date(blogPostB.data.date).getTime() -
                      new Date(blogPostA.data.date).getTime()
                    )
                  })
                  .map((blogPost) => {
                    return (
                      <>
                        <li class="mb-8 last:mb-0">
                          <BlogPostCard blogPost={blogPost} />
                        </li>
                      </>
                    )
                  })}
              </ul>
            </div>
          )
        })
      }
    </div>
  </main>

  <div
    slot="mobile-nav-title"
    class="flex flex-row items-center gap-2 [&_a]:bg-transparent"
  >
    Posts

    <RssButton />
  </div>
</Site>
