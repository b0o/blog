---
import BlogPost from '@layouts/BlogPost.astro'
import type { CollectionEntry } from 'astro:content'
import { getBlogPosts, getBlogPostFolderName } from '@utils/posts'
import _ from 'lodash'

export async function getStaticPaths() {
  const englishBlogPosts = await getBlogPosts('en')
  const portugueseBlogPosts = await getBlogPosts('pt')

  const portugueseBlogPostsNames = portugueseBlogPosts.map((p) =>
    getBlogPostFolderName(p)
  )
  const englishBlogPostsNames = englishBlogPosts.map((p) =>
    getBlogPostFolderName(p)
  )

  function sortByDateInAscendingOrder(blogPosts: CollectionEntry<'posts'>[]) {
    return blogPosts.sort((blogPostA, blogPostB) => {
      return (
        new Date(blogPostA.data.date).getTime() -
        new Date(blogPostB.data.date).getTime()
      )
    })
  }

  return [
    ...sortByDateInAscendingOrder(englishBlogPosts).map(
      (blogPost, index, blogPosts) => {
        const nextBlogPost = blogPosts[index + 1] ?? null
        const prevBlogPost = blogPosts[index - 1] ?? null

        return {
          params: { lang: undefined, id: getBlogPostFolderName(blogPost) },
          props: {
            blogPost: {
              ...blogPost,
              isTranslated: portugueseBlogPostsNames.includes(
                getBlogPostFolderName(blogPost)
              ),
            },
            nextBlogPost,
            prevBlogPost,
          },
        }
      }
    ),
    ...sortByDateInAscendingOrder(portugueseBlogPosts).map(
      (blogPost, index, blogPosts) => {
        const nextBlogPost = blogPosts[index + 1] ?? null
        const prevBlogPost = blogPosts[index - 1] ?? null

        return {
          params: { lang: 'pt', id: getBlogPostFolderName(blogPost) },
          props: {
            blogPost: {
              ...blogPost,
              isTranslated: englishBlogPostsNames.includes(
                getBlogPostFolderName(blogPost)
              ),
            },
            nextBlogPost,
            prevBlogPost,
          },
        }
      }
    ),
  ]
}

type Props = {
  blogPost: CollectionEntry<'posts'> & { isTranslated: boolean }
  nextBlogPost: CollectionEntry<'posts'> | null
  prevBlogPost: CollectionEntry<'posts'> | null
}
---

<BlogPost
  blogPost={Astro.props.blogPost}
  nextBlogPost={Astro.props.nextBlogPost}
  prevBlogPost={Astro.props.prevBlogPost}
/>
