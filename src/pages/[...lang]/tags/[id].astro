---
import Site from '@layouts/Site.astro'
import { getLanguageFromUrl, useTranslate } from '@utils/i18n'
import { getBlogPosts, getBlogPostTags } from '@utils/posts'
import { localizeUrl } from '@utils/i18n'
import { ChevronRight } from 'lucide-react'
import BlogPostCard from '@components/BlogPostCard.astro'
import type { CollectionEntry } from 'astro:content'
import { format } from 'date-fns'

export async function getStaticPaths() {
  const englishBlogPosts = await getBlogPosts('en')
  const portugueseBlogPosts = await getBlogPosts('pt')

  return [
    getBlogPostTags(englishBlogPosts).map((tag) => {
      const blogPosts = englishBlogPosts.filter((blogPost) =>
        blogPost.data.tags?.includes(tag)
      )

      return {
        params: { lang: undefined, id: tag },
        props: {
          blogPosts,
          tag,
        },
      }
    }),
    getBlogPostTags(portugueseBlogPosts).map((tag) => {
      const blogPosts = portugueseBlogPosts.filter((blogPost) =>
        blogPost.data.tags?.includes(tag)
      )

      return {
        params: { lang: 'pt', id: tag },
        props: {
          blogPosts,
          tag,
        },
      }
    }),
  ]
}

const t = useTranslate(Astro)

// eslint-disable-next-line @typescript-eslint/no-unused-vars
type Props = {
  blogPosts: CollectionEntry<'posts'>[]
  tag: string
}

const { tag, blogPosts } = Astro.props

const language = getLanguageFromUrl(Astro.url.pathname)
---

<Site
  title={`Tag: ${tag}`}
  description={t('TagDescription', {
    n: blogPosts.length,
    vars: { count: blogPosts.length, tag },
  })}
>
  <main class="grid grid-cols-layout">
    <div class="mb-8">
      <div
        class="mt-8 w-full hidden sm:flex flex-row items-center gap-2 text-2xl"
      >
        <span>
          <a
            class="text-2xl font-serif font-bold"
            href={localizeUrl('/tags', language)}
            >Tags
          </a>
        </span>

        <span class="text-sm">
          <ChevronRight />
        </span>

        <h1 class="m-0">
          {tag}
        </h1>
      </div>

      <ul class="mt-8 m-0 grid w-full flex-1 list-none grid-cols-1 gap-4">
        {
          blogPosts
            .sort(
              (blogPostA, blogPostB) =>
                blogPostB.data.date.getTime() - blogPostA.data.date.getTime()
            )
            .map((blogPost) => {
              return (
                <li class="mb-2 flex flex-row gap-4 last:mb-0">
                  <time class="text-lg tabular-nums">
                    {format(blogPost.data.date, 'yyyy-MM-dd')}
                  </time>

                  <h2 class="m-0 font-normal">
                    <a href={localizeUrl('/posts/' + blogPost.slug, language)}>
                      {blogPost.data.title}
                    </a>
                  </h2>
                </li>
              )
            })
        }
      </ul>
    </div>
  </main>
</Site>
