---
import BlogPostReadingTime from './BlogPostReadingTime.astro'
import BlogPostDate from './BlogPostDate.astro'
import Tag from './Tag.astro'
import { localizeUrl, getLanguageFromUrl } from '@utils/i18n'
import { getBlogPostName } from '@utils/posts'
import type { CollectionEntry } from 'astro:content'

const language = getLanguageFromUrl(Astro.url.pathname)

type Props = {
  blogPost: CollectionEntry<'posts'>
}

const { blogPost } = Astro.props
const { title, tags, date, description } = blogPost.data

const {
  remarkPluginFrontmatter: { summary, readingTime },
} = await blogPost.render()
---

<article class='flex h-full flex-col'>
  <h3 class='text-2xl max-w-prose m-0 border-l-2 border-primary pl-4'>
    <a
      class='max-w-prose'
      href={localizeUrl(`/posts/${getBlogPostName(blogPost)}`, language)}
    >
      {title}
    </a>
  </h3>

  <div class='mt-2 [&_svg]:w-[1.25em] [&_svg]:h-[1.25em] flex flex-wrap gap-2'>
    <BlogPostDate date={date} />
    <BlogPostReadingTime readingTime={readingTime} />
  </div>

  <div class='my-4 max-w-prose'>
    {description ?? summary}
  </div>

  {
    tags && (
      <div class='flex flex-wrap gap-2'>
        {tags.map((tag) => {
          return <Tag tag={tag} class='snap-start whitespace-nowrap' />
        })}
      </div>
    )
  }
</article>
